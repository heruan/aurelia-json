{"version":3,"sources":["../../src/main/json-decoder.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,6EAAsD;AACtD,2CAAyC;AAGzC,IAAa,WAAW;IAIpB,qBAAmB,UAAyC;QAAzC,2BAAA,EAAA,iBAA6B,wBAAU,EAAE;QACxD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAEM,4BAAM,GAAb,UAAiB,IAAY,EAAE,IAAuB;QAAE,kBAAkB;aAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;YAAlB,iCAAkB;;QACtE,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,UAAU;cAC/C,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC;cAC/C,CAAA,KAAA,IAAI,CAAC,UAAU,CAAA,CAAC,IAAI,YAAC,MAAM,EAAE,IAAI,SAAK,QAAQ,EAAC,CAAC;;IAC1D,CAAC;IAEM,6BAAO,GAAd,UAAe,GAAW,EAAE,KAAU;IAEtC,CAAC;IAEL,kBAAC;AAAD,CAnBA,AAmBC,IAAA;AAnBY,WAAW;IADvB,qCAAM,CAAC,wBAAU,CAAC;qCAKgB,wBAAU;GAJhC,WAAW,CAmBvB;AAnBY,kCAAW","file":"json-decoder.js","sourcesContent":["\nimport { inject } from \"aurelia-dependency-injection\";\nimport { TypeBinder } from \"type-binder\";\n\n@inject(TypeBinder)\nexport class JsonDecoder {\n\n    private typeBinder: TypeBinder;\n\n    public constructor(typeBinder: TypeBinder = new TypeBinder()) {\n        this.typeBinder = typeBinder;\n    }\n\n    public decode<T>(json: string, type: new(...args) => T, ...generics: any[]): T {\n        let object = JSON.parse(json);\n        return type && typeof type[\"fromJSON\"] === \"function\"\n            ? type[\"fromJSON\"](object, this, this.typeBinder)\n            : this.typeBinder.bind(object, type, ...generics);\n    }\n\n    public reviver(key: string, value: any): any {\n\n    }\n\n}\n"]}