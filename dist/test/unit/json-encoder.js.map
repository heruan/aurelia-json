{"version":3,"sources":["../../src/test/unit/json-encoder.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,wDAAsD;AACtD,oDAAmD;AAEnD,QAAQ,CAAC,cAAc,EAAE;IAErB,EAAE,CAAC,2BAA2B,EAAE;QAE5B;YAAA;YAMA,CAAC;YAAD,UAAC;QAAD,CANA,AAMC,IAAA;QAHG;YADC,uBAAU,CAAC,KAAK,CAAC;;wCACd;QAEJ;YADC,uBAAU,CAAC,KAAK,CAAC;sCACX,GAAG;0CAAS;QAGvB,IAAI,OAAO,GAAG,IAAI,0BAAW,EAAE,CAAC;QAChC,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;QACpB,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QACX,GAAG,CAAC,GAAG,GAAG,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,GAAG,EAAC,CAAC;QACjC,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC,KAAK,EAAC,IAAI,EAAC,EAAC,EAAC,MAAM,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACxD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;IAEpF,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","file":"json-encoder.js","sourcesContent":["import { TypeBinder, bind, generics, track } from \"type-binder\";\nimport { JsonEncoder } from \"../../main/json-encoder\";\nimport { jsonIgnore } from \"../../main/decorators\";\n\ndescribe(\"json-encoder\", () => {\n\n    it(\"encodes an object to JSON\", () => {\n\n        class Foo {\n            id;\n            @jsonIgnore(\"bar\")\n            foo;\n            @jsonIgnore(\"boo\")\n            items: Set<Object>;\n        }\n\n        let encoder = new JsonEncoder();\n        let foo = new Foo();\n        foo.id = 1;\n        foo.foo = {\"bar\":true,\"baz\":123};\n        foo.items = new Set([{\"item\":1,\"boo\":null},{\"item\":2}]);\n        let json = encoder.encode(foo);\n        expect(json).toBe('{\"id\":1,\"foo\":{\"baz\":123},\"items\":[{\"item\":1},{\"item\":2}]}');\n\n    });\n\n});\n"]}